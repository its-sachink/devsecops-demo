apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipeline.openshift.io/started-by: 'kube:admin'
  resourceVersion: '40576669'
  name: petclinic-build-dev-lm3m78
  uid: 11f8e487-baf5-4286-b8a2-8b5f29c06bfa
  creationTimestamp: '2022-03-08T07:05:08Z'
  generation: 1
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:pipeline.openshift.io/started-by': {}
          'f:labels':
            .: {}
            'f:tekton.dev/pipeline': {}
        'f:spec':
          .: {}
          'f:params': {}
          'f:pipelineRef':
            .: {}
            'f:name': {}
          'f:resources': {}
          'f:status': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2022-03-08T07:05:08Z'
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          .: {}
          'f:completionTime': {}
          'f:conditions': {}
          'f:pipelineSpec':
            .: {}
            'f:params': {}
            'f:tasks': {}
            'f:workspaces': {}
          'f:skippedTasks': {}
          'f:startTime': {}
          'f:taskRuns':
            .: {}
            'f:petclinic-build-dev-lm3m78-code-analysis-dk5xx':
              .: {}
              'f:pipelineTaskName': {}
              'f:status':
                .: {}
                'f:completionTime': {}
                'f:conditions': {}
                'f:podName': {}
                'f:startTime': {}
                'f:steps': {}
                'f:taskSpec':
                  .: {}
                  'f:description': {}
                  'f:params': {}
                  'f:steps': {}
                  'f:workspaces': {}
            'f:petclinic-build-dev-lm3m78-dependency-report-2tbh8':
              .: {}
              'f:pipelineTaskName': {}
              'f:status':
                .: {}
                'f:completionTime': {}
                'f:conditions': {}
                'f:podName': {}
                'f:startTime': {}
                'f:steps': {}
                'f:taskSpec':
                  .: {}
                  'f:params': {}
                  'f:steps': {}
                  'f:workspaces': {}
            'f:petclinic-build-dev-lm3m78-source-clone-x9zbv':
              .: {}
              'f:pipelineTaskName': {}
              'f:status':
                .: {}
                'f:completionTime': {}
                'f:conditions': {}
                'f:podName': {}
                'f:startTime': {}
                'f:steps': {}
                'f:taskResults': {}
                'f:taskSpec':
                  .: {}
                  'f:description': {}
                  'f:params': {}
                  'f:results': {}
                  'f:steps': {}
                  'f:workspaces': {}
            'f:petclinic-build-dev-lm3m78-unit-tests-tbhvx':
              .: {}
              'f:pipelineTaskName': {}
              'f:status':
                .: {}
                'f:completionTime': {}
                'f:conditions': {}
                'f:podName': {}
                'f:startTime': {}
                'f:steps': {}
                'f:taskSpec':
                  .: {}
                  'f:description': {}
                  'f:params': {}
                  'f:steps': {}
                  'f:workspaces': {}
      manager: openshift-pipelines-controller
      operation: Update
      subresource: status
      time: '2022-03-08T07:07:13Z'
  namespace: cicd
  labels:
    tekton.dev/pipeline: petclinic-build-dev
spec:
  params:
    - name: APP_SOURCE_GIT
      value: >-
        http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic
    - name: APP_SOURCE_REVISION
      value: master
    - name: APP_MANIFESTS_GIT
      value: >-
        http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic-config
    - name: APP_IMAGE_TAG
      value: latest
    - name: DEV_NAMESPACE
      value: devsecops-dev
    - name: APP_TESTS_GIT
      value: 'https://github.com/rcarrata/spring-petclinic-gatling'
  pipelineRef:
    name: petclinic-build-dev
  serviceAccountName: pipeline
  timeout: 1h0m0s
  workspaces:
    - emptyDir: {}
      name: workspace
    - emptyDir: {}
      name: maven-settings
status:
  completionTime: '2022-03-08T07:07:13Z'
  conditions:
    - lastTransitionTime: '2022-03-08T07:07:13Z'
      message: 'Tasks Completed: 4 (Failed: 3, Cancelled 0), Skipped: 10'
      reason: Failed
      status: 'False'
      type: Succeeded
  pipelineSpec:
    params:
      - default: >-
          http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic
        description: The application git repository
        name: APP_SOURCE_GIT
        type: string
      - default: master
        description: The application git revision
        name: APP_SOURCE_REVISION
        type: string
      - default: >-
          http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic-config
        description: The application manifests git repository
        name: APP_MANIFESTS_GIT
        type: string
      - default: latest
        description: The application image tag to build
        name: APP_IMAGE_TAG
        type: string
      - default: devsecops-dev
        description: The namespace for Stage environments
        name: DEV_NAMESPACE
        type: string
      - default: 'https://github.com/rcarrata/spring-petclinic-gatling'
        description: The application test cases git repository
        name: APP_TESTS_GIT
        type: string
    tasks:
      - name: source-clone
        params:
          - name: url
            value: $(params.APP_SOURCE_GIT)
          - name: revision
            value: $(params.APP_SOURCE_REVISION)
          - name: depth
            value: '0'
          - name: subdirectory
            value: spring-petclinic
          - name: deleteExisting
            value: 'true'
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
      - name: unit-tests
        params:
          - name: GOALS
            value:
              - package
              - '-f'
              - spring-petclinic
        runAfter:
          - source-clone
        taskRef:
          kind: Task
          name: maven
        workspaces:
          - name: source
            workspace: workspace
          - name: maven-settings
            workspace: maven-settings
      - name: code-analysis
        params:
          - name: GOALS
            value:
              - install
              - 'sonar:sonar'
              - '-f'
              - spring-petclinic
              - '-Dsonar.host.url=http://sonarqube:9000'
              - '-Dsonar.userHome=/tmp/sonar'
              - '-DskipTests=true'
        runAfter:
          - source-clone
        taskRef:
          kind: Task
          name: maven
        workspaces:
          - name: source
            workspace: workspace
          - name: maven-settings
            workspace: maven-settings
      - name: dependency-report
        params:
          - name: SOURCE_DIR
            value: spring-petclinic
        runAfter:
          - source-clone
        taskRef:
          kind: Task
          name: dependency-report
        workspaces:
          - name: source
            workspace: workspace
          - name: maven-settings
            workspace: maven-settings
      - name: release-app
        params:
          - name: GOALS
            value:
              - deploy
              - '-f'
              - spring-petclinic
              - '-DskipTests=true'
              - >-
                -DaltDeploymentRepository=nexus::default::http://nexus:8081/repository/maven-releases/
              - >-
                -DaltSnapshotDeploymentRepository=nexus::default::http://nexus:8081/repository/maven-snapshots/
        runAfter:
          - code-analysis
          - unit-tests
          - dependency-report
        taskRef:
          kind: Task
          name: maven
        workspaces:
          - name: source
            workspace: workspace
          - name: maven-settings
            workspace: maven-settings
      - name: build-image
        params:
          - name: TLSVERIFY
            value: 'false'
          - name: MAVEN_MIRROR_URL
            value: 'http://nexus:8081/repository/maven-public/'
          - name: PATH_CONTEXT
            value: spring-petclinic/target
          - name: IMAGE_NAME
            value: >-
              image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/spring-petclinic
          - name: IMAGE_TAG
            value: $(params.APP_IMAGE_TAG)
        runAfter:
          - release-app
        taskRef:
          kind: Task
          name: s2i-java-11
		## https://github.com/rcarrata/devsecops-demo/blob/4219c3b7957964bd71c2899898d4273f4d672f50/bootstrap/roles/ocp4-install-pipelines/templates/task-s2i-java-11.yaml.j2
        workspaces:
          - name: source
            workspace: workspace
      - name: image-scan
        params:
          - name: image
            value: >-
              image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/spring-petclinic
          - name: rox_api_token
            value: roxsecrets
          - name: rox_central_endpoint
            value: roxsecrets
          - name: output_format
            value: table
          - name: image_digest
            value: $(tasks.build-image.results.IMAGE_DIGEST)
        runAfter:
          - build-image
        taskRef:
          kind: ClusterTask
          name: rox-image-scan
		  ## https://github.com/rcarrata/devsecops-demo/blob/4219c3b7957964bd71c2899898d4273f4d672f50/bootstrap/roles/ocp4-install-pipelines/templates/task-image-scan-task.yaml.j2
      - name: image-check
        params:
          - name: image
            value: >-
              image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/spring-petclinic
          - name: rox_api_token
            value: roxsecrets
          - name: rox_central_endpoint
            value: roxsecrets
          - name: image_digest
            value: $(tasks.build-image.results.IMAGE_DIGEST)
        runAfter:
          - build-image
        taskRef:
          kind: ClusterTask
          name: rox-image-check
		  ## https://github.com/rcarrata/devsecops-demo/blob/4219c3b7957964bd71c2899898d4273f4d672f50/bootstrap/roles/ocp4-install-pipelines/templates/task-rox-image-check.yaml.j2
      - name: deploy-check
        params:
          - name: GIT_REPOSITORY
            value: $(params.APP_MANIFESTS_GIT)
          - name: rox_api_token
            value: roxsecrets
          - name: rox_central_endpoint
            value: roxsecrets
          - name: file
            value: deployment.yaml
          - name: deployment_files_path
            value: app
        runAfter:
          - build-image
        taskRef:
          kind: ClusterTask
          name: rox-deployment-check
        workspaces:
          - name: workspace
            workspace: workspace
				## https://github.com/rcarrata/devsecops-demo/blob/4219c3b7957964bd71c2899898d4273f4d672f50/bootstrap/roles/ocp4-install-pipelines/templates/task-rox-deployment-check.yaml.j2
      - name: update-deployment
        params:
          - name: GIT_REPOSITORY
            value: $(params.APP_MANIFESTS_GIT)
          - name: GIT_USERNAME
            value: gogs
          - name: GIT_PASSWORD
            value: gogs
          - name: CURRENT_IMAGE
            value: 'quay.io/siamaksade/spring-petclinic:latest'
          - name: NEW_IMAGE
            value: >-
              image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/spring-petclinic
          - name: NEW_DIGEST
            value: $(tasks.build-image.results.IMAGE_DIGEST)
          - name: KUSTOMIZATION_PATH
            value: environments/dev
        runAfter:
          - image-scan
          - image-check
          - deploy-check
        taskRef:
          kind: Task
          name: git-update-deployment
        workspaces:
          - name: workspace
            workspace: workspace
		## https://github.com/rcarrata/devsecops-demo/blob/4219c3b7957964bd71c2899898d4273f4d672f50/bootstrap/roles/ocp4-install-pipelines/templates/task-git-update-deployment.yaml.j2
      - name: wait-application
        params:
          - name: application-name
            value: dev-spring-petclinic
        runAfter:
          - update-deployment
        taskRef:
          kind: Task
          name: argocd-task-sync-and-wait
      - name: perf-tests-clone
        params:
          - name: url
            value: $(params.APP_TESTS_GIT)
          - name: subdirectory
            value: spring-petclinic-gatling
          - name: deleteExisting
            value: 'true'
        runAfter:
          - wait-application
        taskRef:
          kind: ClusterTask
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
      - name: pentesting-test
        params:
          - name: APP_URL
            value: >-
              http://spring-petclinic.$(params.DEV_NAMESPACE).svc.cluster.local:8080
        runAfter:
          - perf-tests-clone
        taskRef:
          kind: Task
          name: zap-proxy
        workspaces:
          - name: workspace
            workspace: workspace
      - name: performance-test
        params:
          - name: APP_URL
            value: >-
              http://spring-petclinic.$(params.DEV_NAMESPACE).svc.cluster.local:8080
        runAfter:
          - perf-tests-clone
        taskRef:
          kind: Task
          name: gatling
        workspaces:
          - name: simulations
            subPath: spring-petclinic-gatling
            workspace: workspace
    workspaces:
      - name: workspace
      - name: maven-settings
  skippedTasks:
    - name: release-app
    - name: build-image
    - name: image-scan
    - name: image-check
    - name: deploy-check
    - name: update-deployment
    - name: wait-application
    - name: perf-tests-clone
    - name: pentesting-test
    - name: performance-test
  startTime: '2022-03-08T07:05:08Z'
  taskRuns:
    petclinic-build-dev-lm3m78-code-analysis-dk5xx:
      pipelineTaskName: code-analysis
      status:
        completionTime: '2022-03-08T07:06:50Z'
        conditions:
          - lastTransitionTime: '2022-03-08T07:06:50Z'
            message: >
              "step-mvn-goals" exited with code 1 (image:
              "gcr.io/cloud-builders/mvn@sha256:22f36e58be4d245056a9148d7c6bbc666a5c06217aa29536af821a56d3fa95cc");
              for logs run: kubectl -n cicd logs
              petclinic-build-dev-lm3m78-code-analysis-dk5xx-pod-2q78t -c
              step-mvn-goals
            reason: Failed
            status: 'False'
            type: Succeeded
        podName: petclinic-build-dev-lm3m78-code-analysis-dk5xx-pod-2q78t
        startTime: '2022-03-08T07:05:42Z'
        steps:
          - container: step-mvn-settings
            imageID: >-
              registry.access.redhat.com/ubi8/ubi-minimal@sha256:21504085e8d740e62b52573fe9a1a0d58a3e7dba589cac69734ad2fa81d66635
            name: mvn-settings
            terminated:
              containerID: >-
                cri-o://e60f77710f7045df768bf2182ea5603c4b62a51639bce08850a4d42ce714be50
              exitCode: 0
              finishedAt: '2022-03-08T07:06:47Z'
              reason: Completed
              startedAt: '2022-03-08T07:06:46Z'
          - container: step-mvn-goals
            imageID: >-
              gcr.io/cloud-builders/mvn@sha256:22f36e58be4d245056a9148d7c6bbc666a5c06217aa29536af821a56d3fa95cc
            name: mvn-goals
            terminated:
              containerID: >-
                cri-o://bd9d14c5436414605d4f883f1596c9be100b05e0acf43945a05dd175b2c240ce
              exitCode: 1
              finishedAt: '2022-03-08T07:06:50Z'
              reason: Error
              startedAt: '2022-03-08T07:06:47Z'
        taskSpec:
          description: This Task can be used to run a Maven build.
          params:
            - default: 'gcr.io/cloud-builders/mvn:3.5.0-jdk-8'
              description: Maven base image
              name: MAVEN_IMAGE
              type: string
            - default:
                - package
              description: maven goals to run
              name: GOALS
              type: array
            - default: ''
              description: The Maven repository mirror url
              name: MAVEN_MIRROR_URL
              type: string
            - default: ''
              description: The username for the proxy server
              name: PROXY_USER
              type: string
            - default: ''
              description: The password for the proxy server
              name: PROXY_PASSWORD
              type: string
            - default: ''
              description: Port number for the proxy server
              name: PROXY_PORT
              type: string
            - default: ''
              description: Proxy server Host
              name: PROXY_HOST
              type: string
            - default: ''
              description: Non proxy server host
              name: PROXY_NON_PROXY_HOSTS
              type: string
            - default: http
              description: Protocol for the proxy ie http or https
              name: PROXY_PROTOCOL
              type: string
          steps:
            - image: 'registry.access.redhat.com/ubi8/ubi-minimal:latest'
              name: mvn-settings
              resources: {}
              script: >
                #!/usr/bin/env bash


                [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \

                echo 'using existing
                $(workspaces.maven-settings.path)/settings.xml' && exit 0


                cat > $(workspaces.maven-settings.path)/settings.xml <<EOF

                <settings>
                  <mirrors>
                    <!-- The mirrors added here are generated from environment variables. Don't change. -->
                    <!-- ### mirrors from ENV ### -->
                  </mirrors>
                  <proxies>
                    <!-- The proxies added here are generated from environment variables. Don't change. -->
                    <!-- ### HTTP proxy from ENV ### -->
                  </proxies>
                </settings>

                EOF


                xml=""

                if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ];
                then
                  xml="<proxy>\
                    <id>genproxy</id>\
                    <active>true</active>\
                    <protocol>$(params.PROXY_PROTOCOL)</protocol>\
                    <host>$(params.PROXY_HOST)</host>\
                    <port>$(params.PROXY_PORT)</port>"
                  if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
                    xml="$xml\
                        <username>$(params.PROXY_USER)</username>\
                        <password>$(params.PROXY_PASSWORD)</password>"
                  fi
                  if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
                    xml="$xml\
                        <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
                  fi
                  xml="$xml\
                      </proxy>"
                  sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi


                if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
                  xml="    <mirror>\
                    <id>mirror.default</id>\
                    <url>$(params.MAVEN_MIRROR_URL)</url>\
                    <mirrorOf>central</mirrorOf>\
                  </mirror>"
                  sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi
            - args:
                - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
                - '-s'
                - $(workspaces.maven-settings.path)/settings.xml
                - $(params.GOALS)
              command:
                - /usr/bin/mvn
              image: $(params.MAVEN_IMAGE)
              name: mvn-goals
              resources:
                limits:
                  cpu: '1'
                  memory: 4Gi
                requests:
                  cpu: 200m
                  memory: 512Mi
              workingDir: $(workspaces.source.path)
          workspaces:
            - description: The workspace consisting of maven project.
              name: source
            - description: >-
                The workspace consisting of the custom maven settings provided
                by the user.
              name: maven-settings
    petclinic-build-dev-lm3m78-dependency-report-2tbh8:
      pipelineTaskName: dependency-report
      status:
        completionTime: '2022-03-08T07:07:13Z'
        conditions:
          - lastTransitionTime: '2022-03-08T07:07:13Z'
            message: >
              "step-mvn-goals" exited with code 1 (image:
              "gcr.io/cloud-builders/mvn@sha256:8ec271e8cad918bee82f0ce8f4b39b6ce6af5f4fa3824f4cb1a6f205119ecaae");
              for logs run: kubectl -n cicd logs
              petclinic-build-dev-lm3m78-dependency-report-2tbh8-pod-p5tsr -c
              step-mvn-goals
            reason: Failed
            status: 'False'
            type: Succeeded
        podName: petclinic-build-dev-lm3m78-dependency-report-2tbh8-pod-p5tsr
        startTime: '2022-03-08T07:05:43Z'
        steps:
          - container: step-mvn-settings
            imageID: >-
              registry.access.redhat.com/ubi8/ubi-minimal@sha256:21504085e8d740e62b52573fe9a1a0d58a3e7dba589cac69734ad2fa81d66635
            name: mvn-settings
            terminated:
              containerID: >-
                cri-o://0a5a2b574b03310a44ca7486340981bfae985364d5ff4622bd18096dc52e2bb5
              exitCode: 0
              finishedAt: '2022-03-08T07:07:11Z'
              reason: Completed
              startedAt: '2022-03-08T07:07:11Z'
          - container: step-mvn-goals
            imageID: >-
              gcr.io/cloud-builders/mvn@sha256:8ec271e8cad918bee82f0ce8f4b39b6ce6af5f4fa3824f4cb1a6f205119ecaae
            name: mvn-goals
            terminated:
              containerID: >-
                cri-o://e4a9e5157aee9eb37e7ea4a64d3d44290c78dcb2079e53639d470337d6fe7b09
              exitCode: 1
              finishedAt: '2022-03-08T07:07:12Z'
              reason: Error
              startedAt: '2022-03-08T07:07:11Z'
          - container: step-archive-site
            imageID: >-
              registry.access.redhat.com/ubi8/ubi@sha256:08062b13edfcbea8f8b621193cf913166ad8e271fe0a5d2fffccc0c8b184c3be
            name: archive-site
            terminated:
              containerID: >-
                cri-o://1818918d978d1657790b7d6f7aec075b3956626d4865860fce0c558f43af44b3
              exitCode: 1
              finishedAt: '2022-03-08T07:07:13Z'
              reason: Error
              startedAt: '2022-03-08T07:07:13Z'
        taskSpec:
          params:
            - default: .
              description: >-
                The directory within the workspace where application source is
                located
              name: SOURCE_DIR
              type: string
            - default: 'http://reports-repo:8080'
              description: >-
                The reports repository host based on
                https://github.com/chmouel/openshift-django-uploader
              name: REPORTS_REPO_HOST
              type: string
            - default: reports
              description: The reports repository username
              name: REPORTS_REPO_USERNAME
              type: string
            - default: reports
              description: The reports repository password
              name: REPORTS_REPO_PASSWORD
              type: string
            - default: ''
              description: The Maven repository mirror url
              name: MAVEN_MIRROR_URL
              type: string
            - default: ''
              description: The username for the proxy server
              name: PROXY_USER
              type: string
            - default: ''
              description: The password for the proxy server
              name: PROXY_PASSWORD
              type: string
            - default: ''
              description: Port number for the proxy server
              name: PROXY_PORT
              type: string
            - default: ''
              description: Proxy server Host
              name: PROXY_HOST
              type: string
            - default: ''
              description: Non proxy server host
              name: PROXY_NON_PROXY_HOSTS
              type: string
            - default: http
              description: Protocol for the proxy ie http or https
              name: PROXY_PROTOCOL
              type: string
          steps:
            - image: 'registry.access.redhat.com/ubi8/ubi-minimal:latest'
              name: mvn-settings
              resources: {}
              script: >
                #!/usr/bin/env bash


                [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \

                echo 'using existing
                $(workspaces.maven-settings.path)/settings.xml' && exit 0


                cat > $(workspaces.maven-settings.path)/settings.xml <<EOF

                <settings>
                  <mirrors>
                    <!-- The mirrors added here are generated from environment variables. Don't change. -->
                    <!-- ### mirrors from ENV ### -->
                  </mirrors>
                  <proxies>
                    <!-- The proxies added here are generated from environment variables. Don't change. -->
                    <!-- ### HTTP proxy from ENV ### -->
                  </proxies>
                </settings>

                EOF


                xml=""

                if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ];
                then
                  xml="<proxy>\
                    <id>genproxy</id>\
                    <active>true</active>\
                    <protocol>$(params.PROXY_PROTOCOL)</protocol>\
                    <host>$(params.PROXY_HOST)</host>\
                    <port>$(params.PROXY_PORT)</port>"
                  if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
                    xml="$xml\
                        <username>$(params.PROXY_USER)</username>\
                        <password>$(params.PROXY_PASSWORD)</password>"
                  fi
                  if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
                    xml="$xml\
                        <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
                  fi
                  xml="$xml\
                      </proxy>"
                  sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi


                if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
                  xml="    <mirror>\
                    <id>mirror.default</id>\
                    <url>$(params.MAVEN_MIRROR_URL)</url>\
                    <mirrorOf>central</mirrorOf>\
                  </mirror>"
                  sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi
            - args:
                - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
                - '-f'
                - $(params.SOURCE_DIR)
                - '-s'
                - $(workspaces.maven-settings.path)/settings.xml
                - site
                - '-DskipTests=true'
              command:
                - /usr/bin/mvn
              image: gcr.io/cloud-builders/mvn
              name: mvn-goals
              resources: {}
              workingDir: $(workspaces.source.path)
            - env:
                - name: PIPELINERUN_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: 'metadata.labels[''tekton.dev/pipelineRun'']'
              image: 'registry.access.redhat.com/ubi8/ubi:latest'
              name: archive-site
              resources: {}
              script: |
                #!/usr/bin/env bash

                for f in $(find $(params.SOURCE_DIR)/target/site -type f); do
                  curl -u $(params.REPORTS_REPO_USERNAME):$(params.REPORTS_REPO_PASSWORD) -F path=$PIPELINERUN_NAME/${f} -X POST -F file=@${f} $(params.REPORTS_REPO_HOST)/upload; echo ""
                done
              workingDir: $(workspaces.source.path)
          workspaces:
            - description: The workspace consisting of maven project.
              name: source
            - description: >-
                The workspace consisting of the custom maven settings provided
                by the user.
              name: maven-settings
    petclinic-build-dev-lm3m78-source-clone-x9zbv:
      pipelineTaskName: source-clone
      status:
        completionTime: '2022-03-08T07:05:42Z'
        conditions:
          - lastTransitionTime: '2022-03-08T07:05:42Z'
            message: All Steps have completed executing
            reason: Succeeded
            status: 'True'
            type: Succeeded
        podName: petclinic-build-dev-lm3m78-source-clone-x9zbv-pod-vqphg
        startTime: '2022-03-08T07:05:09Z'
        steps:
          - container: step-clone
            imageID: >-
              registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
            name: clone
            terminated:
              containerID: >-
                cri-o://f7e58516118cedec10cd8537cde33826cfdd593025e90b12d2b62f9f079992d2
              exitCode: 0
              finishedAt: '2022-03-08T07:05:42Z'
              message: >-
                [{"key":"commit","value":"54810c7364a1710f1cd8742cd2ffa74b9a043449","type":1},{"key":"url","value":"http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic","type":1}]
              reason: Completed
              startedAt: '2022-03-08T07:05:41Z'
        taskResults:
          - name: commit
            value: 54810c7364a1710f1cd8742cd2ffa74b9a043449
          - name: url
            value: >-
              http://gogs-cicd.apps.aglcy11s.westeurope.aroapp.io/gogs/spring-petclinic
        taskSpec:
          description: >-
            These Tasks are Git tasks to work with repositories used by other
            tasks in your Pipeline.

            The git-clone Task will clone a repo from the provided url into the
            output Workspace. By default the repo will be cloned into the root
            of your Workspace. You can clone into a subdirectory by setting this
            Task's subdirectory param. This Task also supports sparse checkouts.
            To perform a sparse checkout, pass a list of comma separated
            directory patterns to this Task's sparseCheckoutDirectories param.
          params:
            - description: Repository URL to clone from.
              name: url
              type: string
            - default: ''
              description: 'Revision to checkout. (branch, tag, sha, ref, etc...)'
              name: revision
              type: string
            - default: ''
              description: Refspec to fetch before checking out revision.
              name: refspec
              type: string
            - default: 'true'
              description: Initialize and fetch git submodules.
              name: submodules
              type: string
            - default: '1'
              description: >-
                Perform a shallow clone, fetching only the most recent N
                commits.
              name: depth
              type: string
            - default: 'true'
              description: >-
                Set the `http.sslVerify` global git config. Setting this to
                `false` is not advised unless you are sure that you trust your
                git remote.
              name: sslVerify
              type: string
            - default: ''
              description: >-
                Subdirectory inside the `output` Workspace to clone the repo
                into.
              name: subdirectory
              type: string
            - default: ''
              description: >-
                Define the directory patterns to match or exclude when
                performing a sparse checkout.
              name: sparseCheckoutDirectories
              type: string
            - default: 'true'
              description: >-
                Clean out the contents of the destination directory if it
                already exists before cloning.
              name: deleteExisting
              type: string
            - default: ''
              description: HTTP proxy server for non-SSL requests.
              name: httpProxy
              type: string
            - default: ''
              description: HTTPS proxy server for SSL requests.
              name: httpsProxy
              type: string
            - default: ''
              description: Opt out of proxying HTTP/HTTPS requests.
              name: noProxy
              type: string
            - default: 'true'
              description: >-
                Log the commands that are executed during `git-clone`'s
                operation.
              name: verbose
              type: string
            - default: >-
                registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
              description: The image providing the git-init binary that this Task runs.
              name: gitInitImage
              type: string
            - default: /tekton/home
              description: >
                Absolute path to the user's home directory. Set this explicitly
                if you are running the image as a non-root user or have
                overridden

                the gitInitImage param with an image containing custom user
                configuration.
              name: userHome
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task.
              name: commit
            - description: The precise URL that was fetched by this Task.
              name: url
          steps:
            - env:
                - name: HOME
                  value: $(params.userHome)
                - name: PARAM_URL
                  value: $(params.url)
                - name: PARAM_REVISION
                  value: $(params.revision)
                - name: PARAM_REFSPEC
                  value: $(params.refspec)
                - name: PARAM_SUBMODULES
                  value: $(params.submodules)
                - name: PARAM_DEPTH
                  value: $(params.depth)
                - name: PARAM_SSL_VERIFY
                  value: $(params.sslVerify)
                - name: PARAM_SUBDIRECTORY
                  value: $(params.subdirectory)
                - name: PARAM_DELETE_EXISTING
                  value: $(params.deleteExisting)
                - name: PARAM_HTTP_PROXY
                  value: $(params.httpProxy)
                - name: PARAM_HTTPS_PROXY
                  value: $(params.httpsProxy)
                - name: PARAM_NO_PROXY
                  value: $(params.noProxy)
                - name: PARAM_VERBOSE
                  value: $(params.verbose)
                - name: PARAM_SPARSE_CHECKOUT_DIRECTORIES
                  value: $(params.sparseCheckoutDirectories)
                - name: PARAM_USER_HOME
                  value: $(params.userHome)
                - name: WORKSPACE_OUTPUT_PATH
                  value: $(workspaces.output.path)
                - name: WORKSPACE_SSH_DIRECTORY_BOUND
                  value: $(workspaces.ssh-directory.bound)
                - name: WORKSPACE_SSH_DIRECTORY_PATH
                  value: $(workspaces.ssh-directory.path)
                - name: WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND
                  value: $(workspaces.basic-auth.bound)
                - name: WORKSPACE_BASIC_AUTH_DIRECTORY_PATH
                  value: $(workspaces.basic-auth.path)
              image: $(params.gitInitImage)
              name: clone
              resources: {}
              script: >
                #!/usr/bin/env sh

                set -eu


                if [ "${PARAM_VERBOSE}" = "true" ] ; then
                  set -x
                fi


                if [ "${WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND}" = "true" ] ; then
                  cp "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials" "${PARAM_USER_HOME}/.git-credentials"
                  cp "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig" "${PARAM_USER_HOME}/.gitconfig"
                  chmod 400 "${PARAM_USER_HOME}/.git-credentials"
                  chmod 400 "${PARAM_USER_HOME}/.gitconfig"
                fi


                if [ "${WORKSPACE_SSH_DIRECTORY_BOUND}" = "true" ] ; then
                  cp -R "${WORKSPACE_SSH_DIRECTORY_PATH}" "${PARAM_USER_HOME}"/.ssh
                  chmod 700 "${PARAM_USER_HOME}"/.ssh
                  chmod -R 400 "${PARAM_USER_HOME}"/.ssh/*
                fi


                CHECKOUT_DIR="${WORKSPACE_OUTPUT_PATH}/${PARAM_SUBDIRECTORY}"


                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf ${CHECKOUT_DIR}" because ${CHECKOUT_DIR} might be "/"
                  # or the root of a mounted volume.
                  if [ -d "${CHECKOUT_DIR}" ] ; then
                    # Delete non-hidden files and directories
                    rm -rf "${CHECKOUT_DIR:?}"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "${CHECKOUT_DIR}"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "${CHECKOUT_DIR}"/..?*
                  fi
                }


                if [ "${PARAM_DELETE_EXISTING}" = "true" ] ; then
                  cleandir
                fi


                test -z "${PARAM_HTTP_PROXY}" || export
                HTTP_PROXY="${PARAM_HTTP_PROXY}"

                test -z "${PARAM_HTTPS_PROXY}" || export
                HTTPS_PROXY="${PARAM_HTTPS_PROXY}"

                test -z "${PARAM_NO_PROXY}" || export
                NO_PROXY="${PARAM_NO_PROXY}"


                /ko-app/git-init \
                  -url="${PARAM_URL}" \
                  -revision="${PARAM_REVISION}" \
                  -refspec="${PARAM_REFSPEC}" \
                  -path="${CHECKOUT_DIR}" \
                  -sslVerify="${PARAM_SSL_VERIFY}" \
                  -submodules="${PARAM_SUBMODULES}" \
                  -depth="${PARAM_DEPTH}" \
                  -sparseCheckoutDirectories="${PARAM_SPARSE_CHECKOUT_DIRECTORIES}"
                cd "${CHECKOUT_DIR}"

                RESULT_SHA="$(git rev-parse HEAD)"

                EXIT_CODE="$?"

                if [ "${EXIT_CODE}" != 0 ] ; then
                  exit "${EXIT_CODE}"
                fi

                printf "%s" "${RESULT_SHA}" > "$(results.commit.path)"

                printf "%s" "${PARAM_URL}" > "$(results.url.path)"
          workspaces:
            - description: >-
                The git repo will be cloned onto the volume backing this
                Workspace.
              name: output
            - description: >
                A .ssh directory with private key, known_hosts, config, etc.
                Copied to

                the user's home before git commands are executed. Used to
                authenticate

                with the git remote when performing the clone. Binding a Secret
                to this

                Workspace is strongly recommended over other volume types.
              name: ssh-directory
              optional: true
            - description: >
                A Workspace containing a .gitconfig and .git-credentials file.
                These

                will be copied to the user's home before any git commands are
                run. Any

                other files in this Workspace are ignored. It is strongly
                recommended

                to use ssh-directory over basic-auth whenever possible and to
                bind a

                Secret to this Workspace over other volume types.
              name: basic-auth
              optional: true
    petclinic-build-dev-lm3m78-unit-tests-tbhvx:
      pipelineTaskName: unit-tests
      status:
        completionTime: '2022-03-08T07:06:50Z'
        conditions:
          - lastTransitionTime: '2022-03-08T07:06:50Z'
            message: >
              "step-mvn-goals" exited with code 1 (image:
              "gcr.io/cloud-builders/mvn@sha256:22f36e58be4d245056a9148d7c6bbc666a5c06217aa29536af821a56d3fa95cc");
              for logs run: kubectl -n cicd logs
              petclinic-build-dev-lm3m78-unit-tests-tbhvx-pod-hmhc9 -c
              step-mvn-goals
            reason: Failed
            status: 'False'
            type: Succeeded
        podName: petclinic-build-dev-lm3m78-unit-tests-tbhvx-pod-hmhc9
        startTime: '2022-03-08T07:05:42Z'
        steps:
          - container: step-mvn-settings
            imageID: >-
              registry.access.redhat.com/ubi8/ubi-minimal@sha256:21504085e8d740e62b52573fe9a1a0d58a3e7dba589cac69734ad2fa81d66635
            name: mvn-settings
            terminated:
              containerID: >-
                cri-o://e61ca064f33e940e93dd1de7bba1a0c1a8f685d120771e4f8216be0370f9e1f1
              exitCode: 0
              finishedAt: '2022-03-08T07:06:47Z'
              reason: Completed
              startedAt: '2022-03-08T07:06:47Z'
          - container: step-mvn-goals
            imageID: >-
              gcr.io/cloud-builders/mvn@sha256:22f36e58be4d245056a9148d7c6bbc666a5c06217aa29536af821a56d3fa95cc
            name: mvn-goals
            terminated:
              containerID: >-
                cri-o://5f62a9ade8ed60224a6680b38ea60a3262861f0b1c996f4117aea7d18dd88837
              exitCode: 1
              finishedAt: '2022-03-08T07:06:50Z'
              reason: Error
              startedAt: '2022-03-08T07:06:47Z'
        taskSpec:
          description: This Task can be used to run a Maven build.
          params:
            - default: 'gcr.io/cloud-builders/mvn:3.5.0-jdk-8'
              description: Maven base image
              name: MAVEN_IMAGE
              type: string
            - default:
                - package
              description: maven goals to run
              name: GOALS
              type: array
            - default: ''
              description: The Maven repository mirror url
              name: MAVEN_MIRROR_URL
              type: string
            - default: ''
              description: The username for the proxy server
              name: PROXY_USER
              type: string
            - default: ''
              description: The password for the proxy server
              name: PROXY_PASSWORD
              type: string
            - default: ''
              description: Port number for the proxy server
              name: PROXY_PORT
              type: string
            - default: ''
              description: Proxy server Host
              name: PROXY_HOST
              type: string
            - default: ''
              description: Non proxy server host
              name: PROXY_NON_PROXY_HOSTS
              type: string
            - default: http
              description: Protocol for the proxy ie http or https
              name: PROXY_PROTOCOL
              type: string
[O          steps:
            - image: 'registry.access.redhat.com/ubi8/ubi-minimal:latest'
              name: mvn-settings
              resources: {}
              script: >
                #!/usr/bin/env bash


                [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \

                echo 'using existing
                $(workspaces.maven-settings.path)/settings.xml' && exit 0


                cat > $(workspaces.maven-settings.path)/settings.xml <<EOF

                <settings>
                  <mirrors>
                    <!-- The mirrors added here are generated from environment variables. Don't change. -->
                    <!-- ### mirrors from ENV ### -->
                  </mirrors>
                  <proxies>
                    <!-- The proxies added here are generated from environment variables. Don't change. -->
                    <!-- ### HTTP proxy from ENV ### -->
                  </proxies>
                </settings>

                EOF


                xml=""

                if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ];
                then
                  xml="<proxy>\
                    <id>genproxy</id>\
                    <active>true</active>\
                    <protocol>$(params.PROXY_PROTOCOL)</protocol>\
                    <host>$(params.PROXY_HOST)</host>\
                    <port>$(params.PROXY_PORT)</port>"
                  if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
                    xml="$xml\
                        <username>$(params.PROXY_USER)</username>\
                        <password>$(params.PROXY_PASSWORD)</password>"
                  fi
                  if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
                    xml="$xml\
                        <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
                  fi
                  xml="$xml\
                      </proxy>"
                  sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi


                if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
                  xml="    <mirror>\
                    <id>mirror.default</id>\
                    <url>$(params.MAVEN_MIRROR_URL)</url>\
                    <mirrorOf>central</mirrorOf>\
                  </mirror>"
                  sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
                fi
            - args:
                - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
                - '-s'
                - $(workspaces.maven-settings.path)/settings.xml
                - $(params.GOALS)
              command:
                - /usr/bin/mvn
              image: $(params.MAVEN_IMAGE)
              name: mvn-goals
              resources:
                limits:
                  cpu: '1'
                  memory: 4Gi
                requests:
                  cpu: 200m
                  memory: 512Mi
              workingDir: $(workspaces.source.path)
          workspaces:
            - description: The workspace consisting of maven project.
              name: source
            - description: >-
                The workspace consisting of the custom maven settings provided
                by the user.
              name: maven-settings

